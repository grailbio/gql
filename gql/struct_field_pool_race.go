// Code generated by " ../../../../github.com/grailbio/base/gtl/generate.py --output=struct_field_pool_race.go --prefix=structField --PREFIX=structField --package=gql -DELEM=[]StructField ../../../../github.com/grailbio/base/gtl/randomized_freepool_race.go.tpl ". DO NOT EDIT.

// +build race

package gql

import "sync/atomic"

type structFieldFreePool struct {
	new func() []StructField
	len int64
}

func NewstructFieldFreePool(new func() []StructField, maxSize int) *structFieldFreePool {
	return &structFieldFreePool{new: new}
}

func (p *structFieldFreePool) Put(x []StructField) {
	atomic.AddInt64(&p.len, -1)
}

func (p *structFieldFreePool) Get() []StructField {
	atomic.AddInt64(&p.len, 1)
	return p.new()
}

func (p *structFieldFreePool) ApproxLen() int { return int(atomic.LoadInt64(&p.len)) }
